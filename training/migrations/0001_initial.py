# Generated by Django 4.2.23 on 2025-06-29 17:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('module_title', models.CharField(max_length=200)),
                ('module_type', models.CharField(choices=[('video', 'Video Lecture'), ('document', 'Document/Reading'), ('quiz', 'Quiz/Assessment'), ('assignment', 'Assignment'), ('discussion', 'Discussion Forum'), ('practical', 'Practical Exercise'), ('other', 'Other')], default='video', max_length=20)),
                ('description', models.TextField()),
                ('content', models.TextField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=0)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order within the course')),
                ('is_required', models.BooleanField(default=True)),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Minimum score to pass (0-100)')),
                ('module_file', models.FileField(blank=True, null=True, upload_to='course_modules/')),
                ('supplementary_files', models.JSONField(default=list, help_text='JSON array of supplementary file paths')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Course Module',
                'verbose_name_plural': 'Course Modules',
                'db_table': 'training_course_module',
                'ordering': ['course', 'order'],
            },
        ),
        migrations.CreateModel(
            name='TrainingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('category_name', models.CharField(max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('grant_management', 'Grant Management'), ('financial_management', 'Financial Management'), ('project_management', 'Project Management'), ('compliance', 'Compliance and Regulations'), ('technology', 'Technology and ICT'), ('leadership', 'Leadership and Management'), ('pedagogy', 'Teaching and Pedagogy'), ('special_needs', 'Special Needs Education'), ('other', 'Other')], default='other', max_length=20)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_training_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Training Category',
                'verbose_name_plural': 'Training Categories',
                'db_table': 'training_training_category',
                'ordering': ['category_type', 'category_name'],
            },
        ),
        migrations.CreateModel(
            name='TrainingCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('course_title', models.CharField(max_length=200, unique=True)),
                ('course_code', models.CharField(help_text='Auto-generated course code', max_length=20, unique=True)),
                ('description', models.TextField()),
                ('learning_objectives', models.TextField()),
                ('target_audience', models.TextField()),
                ('course_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('course_format', models.CharField(choices=[('online', 'Online'), ('in_person', 'In-Person'), ('hybrid', 'Hybrid'), ('self_paced', 'Self-Paced'), ('workshop', 'Workshop'), ('seminar', 'Seminar')], default='online', max_length=20)),
                ('duration_hours', models.PositiveIntegerField(default=0)),
                ('max_participants', models.PositiveIntegerField(default=0, help_text='0 for unlimited')),
                ('course_materials', models.TextField(blank=True, null=True)),
                ('prerequisites', models.TextField(blank=True, null=True)),
                ('certification_requirements', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_training_courses', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='training.trainingcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_training_courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Training Course',
                'verbose_name_plural': 'Training Courses',
                'db_table': 'training_training_course',
                'ordering': ['category', 'course_title'],
            },
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('session_title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('max_participants', models.PositiveIntegerField(default=0)),
                ('current_participants', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed')], default='scheduled', max_length=20)),
                ('session_notes', models.TextField(blank=True, null=True)),
                ('completion_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='training.trainingcourse')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_training_sessions', to=settings.AUTH_USER_MODEL)),
                ('facilitators', models.ManyToManyField(blank=True, related_name='facilitated_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Training Session',
                'verbose_name_plural': 'Training Sessions',
                'db_table': 'training_training_session',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TrainingEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('enrolled', 'Enrolled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('failed', 'Failed')], default='enrolled', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('final_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('is_certified', models.BooleanField(default=False)),
                ('certification_date', models.DateTimeField(blank=True, null=True)),
                ('enrollment_notes', models.TextField(blank=True, null=True)),
                ('completion_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='training.trainingcourse')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='training.trainingsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Training Enrollment',
                'verbose_name_plural': 'Training Enrollments',
                'db_table': 'training_training_enrollment',
                'ordering': ['-enrollment_date'],
                'unique_together': {('user', 'course', 'session')},
            },
        ),
        migrations.CreateModel(
            name='TrainingCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('certificate_type', models.CharField(choices=[('completion', 'Course Completion'), ('achievement', 'Achievement'), ('participation', 'Participation'), ('excellence', 'Excellence'), ('specialization', 'Specialization')], default='completion', max_length=20)),
                ('certificate_title', models.CharField(max_length=200)),
                ('certificate_number', models.CharField(help_text='Auto-generated certificate number', max_length=50, unique=True)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField()),
                ('achievements', models.JSONField(default=list, help_text='JSON array of achievements')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('is_valid', models.BooleanField(default=True)),
                ('is_revoked', models.BooleanField(default=False)),
                ('revocation_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_certificates', to=settings.AUTH_USER_MODEL)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='training.trainingenrollment')),
            ],
            options={
                'verbose_name': 'Training Certificate',
                'verbose_name_plural': 'Training Certificates',
                'db_table': 'training_training_certificate',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='TrainingAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('assessment_title', models.CharField(max_length=200)),
                ('assessment_type', models.CharField(choices=[('quiz', 'Quiz'), ('exam', 'Exam'), ('assignment', 'Assignment'), ('practical', 'Practical Assessment'), ('survey', 'Survey'), ('other', 'Other')], default='quiz', max_length=20)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('time_limit_minutes', models.PositiveIntegerField(default=0, help_text='0 for no time limit')),
                ('passing_score', models.PositiveIntegerField(default=70)),
                ('max_attempts', models.PositiveIntegerField(default=1)),
                ('is_required', models.BooleanField(default=True)),
                ('questions', models.JSONField(default=list, help_text='JSON array containing assessment questions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_assessments', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='training.coursemodule')),
            ],
            options={
                'verbose_name': 'Training Assessment',
                'verbose_name_plural': 'Training Assessments',
                'db_table': 'training_training_assessment',
                'ordering': ['module', 'assessment_title'],
            },
        ),
        migrations.AddField(
            model_name='coursemodule',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='training.trainingcourse'),
        ),
        migrations.AddField(
            model_name='coursemodule',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_course_modules', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='in_progress', max_length=20)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_questions', models.PositiveIntegerField(default=0)),
                ('correct_answers', models.PositiveIntegerField(default=0)),
                ('responses', models.JSONField(default=dict, help_text='JSON object containing user responses')),
                ('time_spent_minutes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='training.trainingassessment')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_results', to='training.trainingenrollment')),
            ],
            options={
                'verbose_name': 'Assessment Result',
                'verbose_name_plural': 'Assessment Results',
                'db_table': 'training_assessment_result',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='ModuleProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='not_started', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('time_spent_minutes', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_progress', to='training.trainingenrollment')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='training.coursemodule')),
            ],
            options={
                'verbose_name': 'Module Progress',
                'verbose_name_plural': 'Module Progress',
                'db_table': 'training_module_progress',
                'ordering': ['enrollment', 'module__order'],
                'unique_together': {('enrollment', 'module')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='coursemodule',
            unique_together={('course', 'order')},
        ),
    ]

# Generated by Django 4.2.23 on 2025-06-29 17:59

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('announcement_type', models.CharField(choices=[('general', 'General Announcement'), ('grant_related', 'Grant Related'), ('training', 'Training Announcement'), ('maintenance', 'System Maintenance'), ('security', 'Security Notice'), ('event', 'Event Announcement'), ('urgent', 'Urgent Notice')], default='general', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('normal', 'Normal Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('summary', models.TextField(blank=True, null=True)),
                ('target_audience', models.JSONField(default=list, help_text='JSON array of target user roles')),
                ('publish_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_acknowledgment', models.BooleanField(default=False)),
                ('show_on_dashboard', models.BooleanField(default=True)),
                ('send_email_notification', models.BooleanField(default=False)),
                ('attachments', models.JSONField(default=list, help_text='JSON array of attachment file paths')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('acknowledgment_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
                'db_table': 'community_announcement',
                'ordering': ['-priority', '-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='CommunityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('event_type', models.CharField(choices=[('meeting', 'Meeting'), ('workshop', 'Workshop'), ('training', 'Training Session'), ('conference', 'Conference'), ('celebration', 'Celebration'), ('awareness', 'Awareness Campaign'), ('other', 'Other')], default='other', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('registration_open', 'Registration Open'), ('registration_closed', 'Registration Closed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('event_title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('objectives', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('is_virtual', models.BooleanField(default=False)),
                ('virtual_meeting_link', models.URLField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField(default=0, help_text='0 for unlimited')),
                ('current_participants', models.PositiveIntegerField(default=0)),
                ('target_audience', models.JSONField(default=list, help_text='JSON array of target user roles')),
                ('event_materials', models.JSONField(default=list, help_text='JSON array of event material file paths')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('registration_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Community Event',
                'verbose_name_plural': 'Community Events',
                'db_table': 'community_community_event',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='CommunityForum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('forum_name', models.CharField(max_length=200, unique=True)),
                ('forum_type', models.CharField(choices=[('general', 'General Discussion'), ('grants', 'Grants Discussion'), ('projects', 'Project Updates'), ('feedback', 'Feedback and Suggestions'), ('announcements', 'Announcements'), ('help', 'Help and Support'), ('events', 'Events and Activities'), ('other', 'Other')], default='general', max_length=20)),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('school_members', 'School Members Only'), ('registered_users', 'Registered Users Only'), ('moderated', 'Moderated Access'), ('private', 'Private')], default='public', max_length=20)),
                ('description', models.TextField()),
                ('rules', models.TextField(blank=True, null=True)),
                ('total_topics', models.PositiveIntegerField(default=0)),
                ('total_posts', models.PositiveIntegerField(default=0)),
                ('total_members', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_moderation', models.BooleanField(default=False)),
                ('allow_anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Community Forum',
                'verbose_name_plural': 'Community Forums',
                'db_table': 'community_community_forum',
                'ordering': ['forum_type', 'forum_name'],
            },
        ),
        migrations.CreateModel(
            name='CommunityMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message_type', models.CharField(choices=[('direct', 'Direct Message'), ('group', 'Group Message'), ('announcement', 'Announcement'), ('notification', 'Notification'), ('system', 'System Message')], default='direct', max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('archived', 'Archived'), ('deleted', 'Deleted')], default='sent', max_length=20)),
                ('is_urgent', models.BooleanField(default=False)),
                ('requires_confirmation', models.BooleanField(default=False)),
                ('attachments', models.JSONField(default=list, help_text='JSON array of attachment file paths')),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Community Message',
                'verbose_name_plural': 'Community Messages',
                'db_table': 'community_community_message',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('feedback_type', models.CharField(choices=[('suggestion', 'Suggestion'), ('complaint', 'Complaint'), ('compliment', 'Compliment'), ('bug_report', 'Bug Report'), ('feature_request', 'Feature Request'), ('general', 'General Feedback')], default='general', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('rejected', 'Rejected'), ('closed', 'Closed')], default='submitted', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('related_module', models.CharField(blank=True, help_text='Related system module', max_length=50, null=True)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('attachments', models.JSONField(default=list, help_text='JSON array of attachment file paths')),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('downvotes', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedback',
                'db_table': 'community_feedback',
                'ordering': ['-priority', '-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('hidden', 'Hidden'), ('deleted', 'Deleted'), ('moderated', 'Under Moderation')], default='active', max_length=20)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('dislike_count', models.PositiveIntegerField(default=0)),
                ('attachments', models.JSONField(default=list, help_text='JSON array of attachment file paths')),
                ('is_edited', models.BooleanField(default=False)),
                ('edit_reason', models.TextField(blank=True, null=True)),
                ('moderation_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Forum Post',
                'verbose_name_plural': 'Forum Posts',
                'db_table': 'community_forum_post',
                'ordering': ['topic', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ForumTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('topic_title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('locked', 'Locked'), ('pinned', 'Pinned'), ('archived', 'Archived'), ('deleted', 'Deleted')], default='active', max_length=20)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('reply_count', models.PositiveIntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_sticky', models.BooleanField(default=False)),
                ('is_announcement', models.BooleanField(default=False)),
                ('allow_replies', models.BooleanField(default=True)),
                ('tags', models.JSONField(default=list, help_text='JSON array of topic tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Forum Topic',
                'verbose_name_plural': 'Forum Topics',
                'db_table': 'community_forum_topic',
                'ordering': ['-is_sticky', '-last_activity'],
            },
        ),
    ]

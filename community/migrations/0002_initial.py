# Generated by Django 4.2.23 on 2025-06-29 17:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('community', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='forumtopic',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_topics', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='forumtopic',
            name='forum',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='community.communityforum'),
        ),
        migrations.AddField(
            model_name='forumtopic',
            name='last_post_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_posts_in_topics', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='forumpost',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='forumpost',
            name='edited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='forumpost',
            name='parent_post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='community.forumpost'),
        ),
        migrations.AddField(
            model_name='forumpost',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='community.forumtopic'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='core.school'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='submitted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communitymessage',
            name='recipients',
            field=models.ManyToManyField(related_name='received_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communitymessage',
            name='replied_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='community.communitymessage'),
        ),
        migrations.AddField(
            model_name='communitymessage',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.school'),
        ),
        migrations.AddField(
            model_name='communitymessage',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communityforum',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_forums', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communityforum',
            name='moderators',
            field=models.ManyToManyField(blank=True, related_name='moderated_forums', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communityforum',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forums', to='core.school'),
        ),
        migrations.AddField(
            model_name='communityevent',
            name='contact_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_for_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communityevent',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communityevent',
            name='organizers',
            field=models.ManyToManyField(related_name='organized_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communityevent',
            name='target_schools',
            field=models.ManyToManyField(blank=True, related_name='events', to='core.school'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_announcements', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='announcement',
            name='target_schools',
            field=models.ManyToManyField(blank=True, related_name='announcements', to='core.school'),
        ),
    ]

# Generated by Django 4.2.23 on 2025-06-29 17:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GrantCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('category_name', models.CharField(max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('infrastructure', 'Infrastructure Development'), ('academic', 'Academic Programs'), ('technology', 'Technology and ICT'), ('sports', 'Sports and Recreation'), ('library', 'Library and Resources'), ('laboratory', 'Laboratory Equipment'), ('maintenance', 'Maintenance and Repairs'), ('training', 'Teacher Training'), ('special_needs', 'Special Needs Support'), ('emergency', 'Emergency Response'), ('other', 'Other')], default='other', max_length=20)),
                ('description', models.TextField()),
                ('min_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('max_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('priority_weight', models.DecimalField(decimal_places=2, default=1.0, help_text='Weight for AI allocation (0.00-1.00)', max_digits=3)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_grant_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grant Category',
                'verbose_name_plural': 'Grant Categories',
                'db_table': 'grants_grant_category',
                'ordering': ['category_name'],
            },
        ),
        migrations.CreateModel(
            name='GrantProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposal_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('proposal_title', models.CharField(max_length=200)),
                ('proposal_code', models.CharField(help_text='Auto-generated proposal code', max_length=20, unique=True)),
                ('description', models.TextField()),
                ('objectives', models.TextField()),
                ('expected_outcomes', models.TextField()),
                ('target_beneficiaries', models.TextField()),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('allocated_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('disbursed_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('priority_level', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted for Review'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('funded', 'Funded'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('ai_priority_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('ai_need_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('ai_impact_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_proposals', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_proposals', to=settings.AUTH_USER_MODEL)),
                ('grant_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to='grants.grantcategory')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grant_proposals', to='core.school')),
            ],
            options={
                'verbose_name': 'Grant Proposal',
                'verbose_name_plural': 'Grant Proposals',
                'db_table': 'grants_grant_proposal',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProposalReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('review_status', models.CharField(choices=[('pending', 'Pending Review'), ('in_progress', 'Review In Progress'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('requires_changes', 'Requires Changes')], default='pending', max_length=20)),
                ('review_notes', models.TextField()),
                ('technical_score', models.DecimalField(decimal_places=2, default=0.0, help_text='Technical merit score (0-100)', max_digits=5)),
                ('feasibility_score', models.DecimalField(decimal_places=2, default=0.0, help_text='Feasibility score (0-100)', max_digits=5)),
                ('impact_score', models.DecimalField(decimal_places=2, default=0.0, help_text='Impact potential score (0-100)', max_digits=5)),
                ('review_start_date', models.DateTimeField()),
                ('review_completion_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='grants.grantproposal')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Proposal Review',
                'verbose_name_plural': 'Proposal Reviews',
                'db_table': 'grants_proposal_review',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProposalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('document_type', models.CharField(choices=[('proposal', 'Proposal Document'), ('budget', 'Budget Breakdown'), ('supporting', 'Supporting Documents'), ('approval', 'Approval Documents'), ('completion', 'Completion Report'), ('other', 'Other')], default='other', max_length=20)),
                ('document_title', models.CharField(max_length=200)),
                ('document_file', models.FileField(upload_to='proposal_documents/')),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='grants.grantproposal')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Proposal Document',
                'verbose_name_plural': 'Proposal Documents',
                'db_table': 'grants_proposal_document',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ProposalBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('item_category', models.CharField(choices=[('personnel', 'Personnel Costs'), ('equipment', 'Equipment and Materials'), ('infrastructure', 'Infrastructure'), ('services', 'Services and Contracts'), ('travel', 'Travel and Transportation'), ('utilities', 'Utilities and Maintenance'), ('other', 'Other Costs')], default='other', max_length=20)),
                ('item_description', models.CharField(max_length=200)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('allocated_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('spent_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_budget_items', to=settings.AUTH_USER_MODEL)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_items', to='grants.grantproposal')),
            ],
            options={
                'verbose_name': 'Proposal Budget Item',
                'verbose_name_plural': 'Proposal Budget Items',
                'db_table': 'grants_proposal_budget',
                'ordering': ['item_category', 'item_description'],
            },
        ),
        migrations.CreateModel(
            name='FundAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('allocation_type', models.CharField(choices=[('initial', 'Initial Allocation'), ('supplementary', 'Supplementary Allocation'), ('adjustment', 'Budget Adjustment'), ('final', 'Final Disbursement')], default='initial', max_length=20)),
                ('allocated_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('disbursed_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('allocation_date', models.DateField()),
                ('disbursement_date', models.DateField(blank=True, null=True)),
                ('allocation_notes', models.TextField(blank=True, null=True)),
                ('disbursement_notes', models.TextField(blank=True, null=True)),
                ('ai_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('ai_factors', models.JSONField(default=dict, help_text='JSON object containing AI allocation factors')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allocated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='made_allocations', to=settings.AUTH_USER_MODEL)),
                ('disbursed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='made_disbursements', to=settings.AUTH_USER_MODEL)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fund_allocations', to='grants.grantproposal')),
            ],
            options={
                'verbose_name': 'Fund Allocation',
                'verbose_name_plural': 'Fund Allocations',
                'db_table': 'grants_fund_allocation',
                'ordering': ['-allocation_date'],
            },
        ),
    ]
